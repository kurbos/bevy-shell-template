name: release

on:
  push:
    tags:
      - "v*.*.*"

env:
  PUBLIC_URL: /bevy-shell-template/
  DOCKER_IMG_NAME: my-game
  VERSION: ${GITHUB_REF#refs/*/}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache build environment
      - name: Check setup tools
        id: cache-setup
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
          key: setup

      # Install cargo deps
      - name: Pull Cargo dependencies
        if: steps.cache-setup.outputs.cache-hit != 'true'
        run: |
          rustup update
          cargo install trunk

  build-wasm:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Pull setup tools
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
          key: setup

      # Check cache for existing revision of build
      - name: Build cache
        id: cache-build
        uses: actions/cache@v3
        with:
          path: ./dist
          key: release-${{ env.VERSION }}

      # Checkout code
      - name: Checkout code
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: actions/checkout@v3

      # Build release version
      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          trunk build --release --public-url ${{ env.PUBLIC_URL }}

  release-wasm:
    needs: build-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Pull release cache
        id: cache-build
        uses: actions/cache@v3
        with:
          path: ./dist
          key: release-${{ env.VERSION }}

      # Deploy, GitHub Pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  release-docker-server:
    needs: build-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Pull release cache
        id: cache-build
        uses: actions/cache@v3
        with:
          path: ./dist
          key: release-${{ env.VERSION }}

      # Qemu is an emulator for alternative architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # Buildx allows us to build for several architectures
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Login to DockerHub - Setup your secrets! Check out the README.
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Push HTTP server Docker image
      - name: Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMG_NAME }}:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMG_NAME }}:latest
